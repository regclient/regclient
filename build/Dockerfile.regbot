ARG REGISTRY=docker.io
ARG ALPINE_VER=3.21.2@sha256:56fa17d2a7e7f168a043a2712e63aed1f8543aeafdcee47c58dcffe38ed51099
ARG GO_VER=1.23.6-alpine@sha256:2c49857f2295e89b23b28386e57e018a86620a8fede5003900f2d138ba9c4037
ARG ECR_HELPER_VER=6540026091fe97d68c5e653b754cac6a3f5937ee
ARG GCR_HELPER_VER=v2.1.26
ARG LUNAJSON_COMMIT=3d10600874527d71519b33ecbb314eb93ccd1df6
ARG SEMVER_COMMIT=a4b708ba243208d46e575da870af969dca46a94d

FROM ${REGISTRY}/library/golang:${GO_VER} AS golang
RUN apk add --no-cache \
      ca-certificates \
      git \
      make
WORKDIR /src

FROM golang AS build
RUN addgroup -g 1000 appuser \
 && adduser -u 1000 -G appuser -D appuser \
 && mkdir -p /home/appuser/.docker \
 && chown -R appuser /home/appuser
COPY go.* /src/
RUN go mod download
COPY . /src/
RUN make bin/regbot
USER appuser
CMD [ "/src/bin/regbot" ]

FROM golang AS docker-cred-ecr-login
ARG TARGETOS
ARG TARGETARCH
ARG ECR_HELPER_VER
RUN CGO_ENABLED=0 go install -trimpath -ldflags=-buildid= github.com/awslabs/amazon-ecr-credential-helper/ecr-login/cli/docker-credential-ecr-login@${ECR_HELPER_VER} \
 && ( cp "${GOPATH}/bin/docker-credential-ecr-login" /usr/local/bin/docker-credential-ecr-login \
   || cp "${GOPATH}/bin/${TARGETOS}_${TARGETARCH}/docker-credential-ecr-login" /usr/local/bin/docker-credential-ecr-login )

FROM golang AS docker-cred-gcr
ARG TARGETOS
ARG TARGETARCH
ARG GCR_HELPER_VER
RUN GOOS=${TARGETOS} GOARCH=${TARGETARCH} CGO_ENABLED=0 \
    go install -trimpath -ldflags="-buildid= -s -w" \
      github.com/GoogleCloudPlatform/docker-credential-gcr/v2@${GCR_HELPER_VER} \
 && ( cp "${GOPATH}/bin/docker-credential-gcr" /usr/local/bin/docker-credential-gcr \
   || cp "${GOPATH}/bin/${TARGETOS}_${TARGETARCH}/docker-credential-gcr" /usr/local/bin/docker-credential-gcr )

FROM ${REGISTRY}/library/alpine:${ALPINE_VER} AS lua-mods
# COPY may pull in old timestamps, use a touch command below to reset them
COPY cmd/regbot/lua/ /lua/
ARG LUNAJSON_COMMIT
ARG SEMVER_COMMIT
ARG SOURCE_DATE_EPOCH
RUN apk add curl \
 && mkdir -p /lua/lunajson \
 && curl -fL https://raw.githubusercontent.com/grafi-tt/lunajson/${LUNAJSON_COMMIT}/src/lunajson.lua > /lua/lunajson.lua \
 && curl -fL https://raw.githubusercontent.com/grafi-tt/lunajson/${LUNAJSON_COMMIT}/src/lunajson/decoder.lua > /lua/lunajson/decoder.lua \
 && curl -fL https://raw.githubusercontent.com/grafi-tt/lunajson/${LUNAJSON_COMMIT}/src/lunajson/encoder.lua > /lua/lunajson/encoder.lua \
 && curl -fL https://raw.githubusercontent.com/grafi-tt/lunajson/${LUNAJSON_COMMIT}/src/lunajson/sax.lua > /lua/lunajson/sax.lua \
 && curl -fL https://raw.githubusercontent.com/kikito/semver.lua/${SEMVER_COMMIT}/semver.lua > /lua/semver.lua \
 && cd /lua \
 && ln -s lunajson.lua json.lua \
 && SOURCE_DATE_EPOCH="${SOURCE_DATE_EPOCH:-$(date +%s)}" sh -c 'find . -exec touch --date="@${SOURCE_DATE_EPOCH}" {} \;'

FROM build AS release-base
USER root
RUN mkdir -p /output/etc/ssl/certs/ /output/home /output/tmp /output/usr/local/bin \
 && cp -a /etc/passwd /etc/group /output/etc/ \
 && cp -a /etc/ssl/certs/ca-certificates.crt /output/etc/ssl/certs/ \
 && cp -a /home/appuser /output/home/ \
 && chmod 1777 /output/tmp

FROM ${REGISTRY}/library/alpine:${ALPINE_VER} AS release-alpine
COPY --from=release-base /output /
COPY --from=docker-cred-ecr-login /usr/local/bin/docker-credential-* /usr/local/bin/
COPY --from=docker-cred-gcr /usr/local/bin/docker-credential-* /usr/local/bin/
COPY --from=build /src/bin/regbot /usr/local/bin/regbot
COPY --from=lua-mods /lua /lua-mods
ENV LUA_PATH="?;?.lua;/lua-user/?;/lua-user/?.lua;/lua-mods/?;/lua-mods/?.lua"
USER appuser
CMD [ "regbot", "--help" ]

ARG BUILD_DATE
ARG VCS_REF
ARG VCS_VERSION=(devel)
LABEL maintainer="" \
      org.opencontainers.image.created=$BUILD_DATE \
      org.opencontainers.image.authors="regclient contributors" \
      org.opencontainers.image.url="https://github.com/regclient/regclient" \
      org.opencontainers.image.documentation="https://github.com/regclient/regclient" \
      org.opencontainers.image.source="https://github.com/regclient/regclient" \
      org.opencontainers.image.version=$VCS_VERSION \
      org.opencontainers.image.revision=$VCS_REF \
      org.opencontainers.image.vendor="regclient" \
      org.opencontainers.image.licenses="Apache 2.0" \
      org.opencontainers.image.title="regbot" \
      org.opencontainers.image.description="regclient/regbot utility for managing registry content (alpine)"

FROM scratch AS release-scratch
COPY --from=release-base /output /
COPY --from=build /src/bin/regbot /regbot
COPY --from=lua-mods /lua /lua-mods
ENV LUA_PATH="?;?.lua;/lua-user/?;/lua-user/?.lua;/lua-mods/?;/lua-mods/?.lua"
USER appuser
ENTRYPOINT [ "/regbot" ]

ARG BUILD_DATE
ARG VCS_REF
ARG VCS_VERSION=(devel)
LABEL maintainer="" \
      org.opencontainers.image.created=$BUILD_DATE \
      org.opencontainers.image.authors="regclient contributors" \
      org.opencontainers.image.url="https://github.com/regclient/regclient" \
      org.opencontainers.image.documentation="https://github.com/regclient/regclient" \
      org.opencontainers.image.source="https://github.com/regclient/regclient" \
      org.opencontainers.image.version=$VCS_VERSION \
      org.opencontainers.image.revision=$VCS_REF \
      org.opencontainers.image.vendor="regclient" \
      org.opencontainers.image.licenses="Apache 2.0" \
      org.opencontainers.image.title="regbot" \
      org.opencontainers.image.description="regclient/regbot utility for managing registry content (scratch)"
