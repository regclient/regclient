ARG REGISTRY=docker.io
ARG ALPINE_VER=3.20.2@sha256:0a4eaa0eecf5f8c050e5bba433f58c052be7587ee8af3e8b3910ef9ab5fbe9f5
ARG GO_VER=1.22.5-alpine@sha256:0d3653dd6f35159ec6e3d10263a42372f6f194c3dea0b35235d72aabde86486e
ARG ECR_HELPER_VER=a8d7d3c42ca114b5accc1b373aad865f075ca3c1
ARG GCR_HELPER_VER=v2.1.23
ARG LUNAJSON_COMMIT=3d10600874527d71519b33ecbb314eb93ccd1df6
ARG SEMVER_COMMIT=af495adc857d51fd1507a112be18523828a1da0d

FROM ${REGISTRY}/library/golang:${GO_VER} AS golang
RUN apk add --no-cache \
      ca-certificates \
      git \
      make
RUN adduser -D appuser \
 && mkdir -p /home/appuser/.docker \
 && chown -R appuser /home/appuser
WORKDIR /src

FROM golang AS build
COPY go.* /src/
RUN go mod download
COPY . /src/
RUN make bin/regbot
USER appuser
CMD [ "/src/bin/regbot" ]

FROM golang AS docker-cred-ecr-login
ARG TARGETOS
ARG TARGETARCH
ARG ECR_HELPER_VER
RUN CGO_ENABLED=0 go install -trimpath -ldflags=-buildid= github.com/awslabs/amazon-ecr-credential-helper/ecr-login/cli/docker-credential-ecr-login@${ECR_HELPER_VER} \
 && ( cp "${GOPATH}/bin/docker-credential-ecr-login" /usr/local/bin/docker-credential-ecr-login \
   || cp "${GOPATH}/bin/${TARGETOS}_${TARGETARCH}/docker-credential-ecr-login" /usr/local/bin/docker-credential-ecr-login )

FROM golang AS docker-cred-gcr
ARG TARGETOS
ARG TARGETARCH
ARG GCR_HELPER_VER
RUN GOOS=${TARGETOS} GOARCH=${TARGETARCH} CGO_ENABLED=0 \
    go install -trimpath -ldflags="-buildid= -s -w" \
      github.com/GoogleCloudPlatform/docker-credential-gcr/v2@${GCR_HELPER_VER} \
 && ( cp "${GOPATH}/bin/docker-credential-gcr" /usr/local/bin/docker-credential-gcr \
   || cp "${GOPATH}/bin/${TARGETOS}_${TARGETARCH}/docker-credential-gcr" /usr/local/bin/docker-credential-gcr )

FROM ${REGISTRY}/library/alpine:${ALPINE_VER} AS lua-mods
# COPY may pull in old timestamps, use a touch command below to reset them
COPY cmd/regbot/lua/ /lua/
ARG LUNAJSON_COMMIT
ARG SEMVER_COMMIT
ARG SOURCE_DATE_EPOCH
RUN apk add curl \
 && mkdir -p /lua/lunajson \
 && curl -fL https://raw.githubusercontent.com/grafi-tt/lunajson/${LUNAJSON_COMMIT}/src/lunajson.lua > /lua/lunajson.lua \
 && curl -fL https://raw.githubusercontent.com/grafi-tt/lunajson/${LUNAJSON_COMMIT}/src/lunajson/decoder.lua > /lua/lunajson/decoder.lua \
 && curl -fL https://raw.githubusercontent.com/grafi-tt/lunajson/${LUNAJSON_COMMIT}/src/lunajson/encoder.lua > /lua/lunajson/encoder.lua \
 && curl -fL https://raw.githubusercontent.com/grafi-tt/lunajson/${LUNAJSON_COMMIT}/src/lunajson/sax.lua > /lua/lunajson/sax.lua \
 && curl -fL https://raw.githubusercontent.com/kikito/semver.lua/${SEMVER_COMMIT}/semver.lua > /lua/semver.lua \
 && cd /lua \
 && ln -s lunajson.lua json.lua \
 && SOURCE_DATE_EPOCH="${SOURCE_DATE_EPOCH:-$(date +%s)}" sh -c 'find . -exec touch --date="@${SOURCE_DATE_EPOCH}" {} \;'


FROM ${REGISTRY}/library/alpine:${ALPINE_VER} AS release-alpine
COPY --from=build /etc/passwd /etc/group /etc/
COPY --from=build /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=build --chown=appuser /home/appuser /home/appuser
COPY --from=docker-cred-ecr-login /usr/local/bin/docker-credential-* /usr/local/bin/
COPY --from=docker-cred-gcr /usr/local/bin/docker-credential-* /usr/local/bin/
COPY --from=build /src/bin/regbot /usr/local/bin/regbot
COPY --from=lua-mods /lua /lua-mods
ENV LUA_PATH="?;?.lua;/lua-user/?;/lua-user/?.lua;/lua-mods/?;/lua-mods/?.lua"
USER appuser
CMD [ "regbot", "--help" ]

ARG BUILD_DATE
ARG VCS_REF
ARG VCS_VERSION=(devel)
LABEL maintainer="" \
      org.opencontainers.image.created=$BUILD_DATE \
      org.opencontainers.image.authors="regclient contributors" \
      org.opencontainers.image.url="https://github.com/regclient/regclient" \
      org.opencontainers.image.documentation="https://github.com/regclient/regclient" \
      org.opencontainers.image.source="https://github.com/regclient/regclient" \
      org.opencontainers.image.version=$VCS_VERSION \
      org.opencontainers.image.revision=$VCS_REF \
      org.opencontainers.image.vendor="regclient" \
      org.opencontainers.image.licenses="Apache 2.0" \
      org.opencontainers.image.title="regbot" \
      org.opencontainers.image.description="regclient/regbot utility for managing registry content (alpine)"

FROM scratch AS release-scratch
ADD  build/root.tgz /
COPY --from=build /etc/passwd /etc/group /etc/
COPY --from=build /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=build --chown=appuser /home/appuser /home/appuser
COPY --from=build /src/bin/regbot /regbot
COPY --from=lua-mods /lua /lua-mods
ENV LUA_PATH="?;?.lua;/lua-user/?;/lua-user/?.lua;/lua-mods/?;/lua-mods/?.lua"
USER appuser
ENTRYPOINT [ "/regbot" ]

ARG BUILD_DATE
ARG VCS_REF
ARG VCS_VERSION=(devel)
LABEL maintainer="" \
      org.opencontainers.image.created=$BUILD_DATE \
      org.opencontainers.image.authors="regclient contributors" \
      org.opencontainers.image.url="https://github.com/regclient/regclient" \
      org.opencontainers.image.documentation="https://github.com/regclient/regclient" \
      org.opencontainers.image.source="https://github.com/regclient/regclient" \
      org.opencontainers.image.version=$VCS_VERSION \
      org.opencontainers.image.revision=$VCS_REF \
      org.opencontainers.image.vendor="regclient" \
      org.opencontainers.image.licenses="Apache 2.0" \
      org.opencontainers.image.title="regbot" \
      org.opencontainers.image.description="regclient/regbot utility for managing registry content (scratch)"
